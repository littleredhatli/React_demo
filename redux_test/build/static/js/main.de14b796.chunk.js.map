{"version":3,"sources":["redux/action_types.js","redux/reducers/person.js","redux/reducers/index.js","redux/reducers/count.js","redux/store.js","redux/actions/count.js","container/Count/index.jsx","container/Person/index.jsx","redux/actions/person.js","App.jsx","index.js"],"names":["INCREAMENT","DECREAMENT","ADDPERSON","initPerson","id","name","age","combineReducers","count","preState","action","type","data","person","createStore","allReducers","composeWithDevTools","applyMiddleware","thunk","increamentAction","Count","increament","add","selectValue","value","props","decreament","increamentIfOdd","store","getState","increamentAscyn","this","len","ref","e","onClick","Component","connect","state","length","time","dispatch","setTimeout","Person","addPerson","username","obj","nanoid","personAction","map","p","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de14b796.chunk.js","sourcesContent":["export const INCREAMENT = 'increament';\nexport const DECREAMENT = 'decreament';\nexport const ADDPERSON = 'addPerson';","import {ADDPERSON} from '../action_types'\n\nconst initPerson = [{id:'01', name: 'tom', age: '18'}];\nexport default function personReducer(preState=initPerson, action){\n    const {type, data} = action;\n    switch(type){\n        case ADDPERSON:\n            return [data, ...preState];\n        default:\n            return preState; \n    }\n}","// 用于汇总所有reducer为一个总的reducer\n\nimport {combineReducers} from 'redux';\nimport countReducer from './count';\nimport personReducer from './person';\n\nexport default combineReducers({\n    count : countReducer, \n    person: personReducer\n})","import {INCREAMENT, DECREAMENT} from '../action_types'\n\nconst initState = 0;\nexport default function countReducer(preState=initState, action){\n    const {type, data} = action;\n    switch(type){\n        case INCREAMENT : \n            return preState + data;\n        case DECREAMENT :\n            return preState - data;\n        default:\n            return preState;\n    }\n}","// 暴露一个store对象\n\nimport {applyMiddleware, createStore} from 'redux';\n\nimport allReducers from './reducers/index';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\nexport default createStore(allReducers, composeWithDevTools(applyMiddleware(thunk)));","import {INCREAMENT, DECREAMENT} from '../action_types'\n\nexport const increamentAction = data => ({type: INCREAMENT, data});\nexport const decreamentAction = data => ({type: DECREAMENT, data});\n\n//异步action,action的值为一个函数\nexport const increamentAscynAction = (data,time) => {\n    return (dispatch) => {\n        setTimeout(() => {\n            dispatch(increamentAction(data));\n        }, time);\n    }\n}","import React, { Component } from 'react';\nimport store from '../../redux/store';\nimport {connect} from 'react-redux'\nimport { decreamentAction, increamentAction, increamentAscynAction } from '../../redux/actions/count';\n\nclass Count extends Component {\n    increament = ()=> {\n        const add = this.selectValue.value;\n        this.props.increament(add*1);\n    }\n\n    decreament = ()=> {\n        const add = this.selectValue.value;\n        this.props.decreament(add*1);\n    }\n\n    increamentIfOdd = ()=> {\n        const add = this.selectValue.value;\n        const count = store.getState();\n        if(this.props.count % 2 === 1){\n            this.props.increament(add*1);\n        }\n    }\n\n    increamentAscyn = ()=> {\n        const add = this.selectValue.value;\n        this.props.increamentAscyn(add*1, 500);\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Count组件，下一个组件的人数为：{this.props.len}</h2>\n                <h2>当前求和结果为：{this.props.count}</h2>\n                <select ref={e => this.selectValue = e}>\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                </select>&nbsp;\n                <button onClick={this.increament}>+</button>&nbsp;\n                <button onClick={this.decreament}>-</button>&nbsp;\n                <button onClick={this.increamentIfOdd}>奇数加</button>&nbsp;\n                <button onClick={this.increamentAscyn}>异步加</button>\n            </div>\n        )\n    }\n}\n\n//用于传递状态，返回一个对象\n// function mapStateToProps(state){\n//     return {count : state};\n// }\n\n//用于传递操作状态的方法，返回一个对象\n// function mapDispatchToProps(dispatch){\n//     return {\n//         increament: data => dispatch(increamentAction(data)),\n//         decreament: data => dispatch(decreamentAction(data)),\n//         increamentAscyn: (data, time) => dispatch(increamentAscynAction(data, time))\n//     }\n// }\n\nexport default connect(\n    state => ({count: state.count, len: state.person.length}), \n    {\n        increament: increamentAction,\n        decreament: decreamentAction,\n        increamentAscyn: increamentAscynAction\n    })(Count)","import React, { Component } from 'react';\nimport {nanoid} from 'nanoid';\nimport {connect} from 'react-redux';\nimport {personAction} from '../../redux/actions/person'\n\nclass Person extends Component {\n    addPerson = () => {\n        const username = this.username.value;\n        const age = this.age.value;\n        const obj = {id:nanoid(), name: username, age};\n        this.props.personAction(obj);\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Person组件，上一个组件和为：{this.props.count}</h2>\n                姓名：<input ref={e => this.username=e} type=\"text\"/>\n                年龄：<input ref={e => this.age=e} type=\"text\"/>\n                <button onClick={this.addPerson}>添加</button>\n                <ul>\n                    {\n                        this.props.person.map(p => {\n                            return <li key={p.id}>{p.name}--{p.age}</li>\n                        })\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => ({person: state.person, count: state.count}),\n    {personAction}\n)(Person)","import {ADDPERSON} from '../action_types'\n\nexport const personAction = (obj) => ({type: ADDPERSON, data: obj});","import React, { Component } from 'react'\nimport Count from './container/Count';\nimport Person from './container/Person';\nimport store from './redux/store'\n\nexport default class App extends Component {\n    render() {\n        return (\n            <div>\n                <Count store={store}/>\n                <hr/>\n                <Person/>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport {Provider} from 'react-redux'\nimport App from './App'\n\nReactDOM.render(\n  // 此处需要用Provider包裹App，目的是让App所有的后代容器组件都能接收到store\n  <Provider store={store}>\n    <App/>\n  </Provider>  \n    , document.getElementById('root'));"],"sourceRoot":""}