{"ast":null,"code":"var _jsxFileName = \"/Users/fatcrystal/Documents/React_demo/extension_hooks/src/component/4_context/index.jsx\";\nimport React, { Component } from 'react';\nimport './index.css'; //Context 设计目的是为了共享那些对于一个组件树而言是“全局”的数据；\n//主要应用场景在于很多不同层级的组件需要访问同样一些的数据。请谨慎使用，因为这会使得组件的复用性变差。\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContextA = /*#__PURE__*/React.createContext();\nconst {\n  Provider,\n  Consumer\n} = ContextA;\nexport default class A extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: 'tom',\n      age: '18'\n    };\n  }\n\n  render() {\n    const {\n      username,\n      age\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"classA\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u7EC4\\u4EF6A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"A\\u7EC4\\u4EF6state\\u7528\\u6237\\u540D\\u4E3A\", username, \",\\u5E74\\u9F84\\u4E3A\", age]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Provider, {\n        value: {\n          username,\n          age\n        },\n        children: /*#__PURE__*/_jsxDEV(B, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass B extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"classB\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u7EC4\\u4EF6B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(C, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n/* class C extends Component {\n    static contextType = ContextA;\n    render() {\n        const {username, age} = this.context;\n        return (\n            <div className='classC'>\n                <h3>组件C</h3>\n                <h3>从A组件接收到的用户名为{username},年龄为{age}</h3>\n            </div>\n        )\n    }\n}\n*/\n\n\nfunction C() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"classC\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u7EC4\\u4EF6C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"\\u4ECEA\\u7EC4\\u4EF6\\u63A5\\u6536\\u5230\\u7684\\u7528\\u6237\\u540D\\u4E3A\", /*#__PURE__*/_jsxDEV(Consumer, {\n        children: value => `${value.username},年龄为${value.age}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_c = C;\n\nvar _c;\n\n$RefreshReg$(_c, \"C\");","map":{"version":3,"sources":["/Users/fatcrystal/Documents/React_demo/extension_hooks/src/component/4_context/index.jsx"],"names":["React","Component","ContextA","createContext","Provider","Consumer","A","state","username","age","render","B","C","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP,C,CAEA;AACA;;;AAEA,MAAMC,QAAQ,gBAAGF,KAAK,CAACG,aAAN,EAAjB;AACA,MAAM;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,IAAuBH,QAA7B;AACA,eAAe,MAAMI,CAAN,SAAgBL,SAAhB,CAA0B;AAAA;AAAA;AAAA,SACrCM,KADqC,GAC7B;AAACC,MAAAA,QAAQ,EAAE,KAAX;AAAkBC,MAAAA,GAAG,EAAE;AAAvB,KAD6B;AAAA;;AAErCC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACF,MAAAA,QAAD;AAAWC,MAAAA;AAAX,QAAkB,KAAKF,KAA7B;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,iEAAiBC,QAAjB,yBAA+BC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE;AAACD,UAAAA,QAAD;AAAUC,UAAAA;AAAV,SAAjB;AAAA,+BACI,QAAC,CAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAboC;;AAgBzC,MAAME,CAAN,SAAgBV,SAAhB,CAA0B;AACtBS,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,CAAD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AARqB;AAW1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASE,CAAT,GAAY;AACR,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,qGAEA,QAAC,QAAD;AAAA,kBAEQC,KAAK,IAAK,GAAEA,KAAK,CAACL,QAAS,OAAMK,KAAK,CAACJ,GAAI;AAFnD;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;KAdQG,C","sourcesContent":["import React, { Component } from 'react';\nimport './index.css'\n\n//Context 设计目的是为了共享那些对于一个组件树而言是“全局”的数据；\n//主要应用场景在于很多不同层级的组件需要访问同样一些的数据。请谨慎使用，因为这会使得组件的复用性变差。\n\nconst ContextA = React.createContext();\nconst {Provider, Consumer} = ContextA;\nexport default class A extends Component {\n    state = {username: 'tom', age: '18'};\n    render() {\n        const {username, age} = this.state;\n        return (\n            <div className='classA'>\n                <h3>组件A</h3>\n                <h3>A组件state用户名为{username},年龄为{age}</h3>\n                <Provider value={{username,age}}>\n                    <B/>\n                </Provider>\n            </div>\n        )\n    }\n}\n\nclass B extends Component {\n    render() {\n        return (\n            <div className='classB'>\n                <h3>组件B</h3>\n                <C/>\n            </div>\n        )\n    }\n}\n\n/* class C extends Component {\n    static contextType = ContextA;\n    render() {\n        const {username, age} = this.context;\n        return (\n            <div className='classC'>\n                <h3>组件C</h3>\n                <h3>从A组件接收到的用户名为{username},年龄为{age}</h3>\n            </div>\n        )\n    }\n}\n*/\n\nfunction C(){\n    return (\n        <div className='classC'>\n            <h3>组件C</h3>\n            <h3>从A组件接收到的用户名为\n            {/* 函数式组件需要借助Consumer */}\n            <Consumer>\n                {\n                    value => `${value.username},年龄为${value.age}`\n                }\n            </Consumer>\n            </h3>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}