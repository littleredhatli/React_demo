{"ast":null,"code":"var _jsxFileName = \"/Users/fatcrystal/Documents/React_demo/extension_hooks/src/component/3_hooks/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport ReactDom from 'react-dom';\n/* class Demo extends Component {\n    state = {count : 0}\n\n    handleAdd = ()=> {\n        this.setState(state => ({count: state.count+1}));\n    }\n\n    componentDidMount(){\n        this.timer = setInterval(() => {\n            this.setState(state => ({count: state.count+1}));\n        }, 1000);\n    }\n\n    unmount = () => {\n        ReactDom.unmountComponentAtNode(document.getElementById('root'));\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.timer);\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>当前求和为：{this.state.count}</h2>\n                <button onClick={this.handleAdd}>点击+1</button>\n                <button onClick={this.unmount}>卸载组件</button>\n            </div>\n        )\n    }\n}\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Demo() {\n  _s();\n\n  const [count, setCount] = React.useState(0);\n\n  function handleAdd() {\n    //setCount(count+1); //setCount写法1: setXxx(newValue)\n    setCount(count => count + 1); //setCount写法2: setXxx(value => newValue)\n  }\n\n  function unmount() {\n    ReactDom.unmountComponentAtNode(document.getElementById('root'));\n  }\n\n  React.useEffect(() => {\n    let timer = setInterval(() => {\n      setCount(count => count + 1);\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A\\uFF1A\", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdd,\n      children: \"\\u70B9\\u51FB+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: unmount,\n      children: \"\\u5378\\u8F7D\\u7EC4\\u4EF6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Demo, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n\n_c = Demo;\nexport default Demo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"sources":["/Users/fatcrystal/Documents/React_demo/extension_hooks/src/component/3_hooks/index.jsx"],"names":["React","Component","ReactDom","Demo","count","setCount","useState","handleAdd","unmount","unmountComponentAtNode","document","getElementById","useEffect","timer","setInterval","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAGA,SAASC,IAAT,GAAe;AAAA;;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAAe,CAAf,CAA1B;;AAEA,WAASC,SAAT,GAAoB;AAChB;AACAF,IAAAA,QAAQ,CAACD,KAAK,IAAIA,KAAK,GAAC,CAAhB,CAAR,CAFgB,CAEY;AAC/B;;AAED,WAASI,OAAT,GAAkB;AACdN,IAAAA,QAAQ,CAACO,sBAAT,CAAgCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhC;AACH;;AAEDX,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AAClB,QAAIC,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC1BT,MAAAA,QAAQ,CAACD,KAAK,IAAIA,KAAK,GAAC,CAAhB,CAAR;AACH,KAFsB,EAEpB,IAFoB,CAAvB;AAGA,WAAO,MAAM;AACTW,MAAAA,aAAa,CAACF,KAAD,CAAb;AACH,KAFD;AAGH,GAPD,EAOG,CAACT,KAAD,CAPH;AASA,sBACI;AAAA,4BACI;AAAA,yDAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA5BQL,I;;KAAAA,I;AA8BT,eAAeA,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactDom from 'react-dom'\n\n/* class Demo extends Component {\n    state = {count : 0}\n\n    handleAdd = ()=> {\n        this.setState(state => ({count: state.count+1}));\n    }\n\n    componentDidMount(){\n        this.timer = setInterval(() => {\n            this.setState(state => ({count: state.count+1}));\n        }, 1000);\n    }\n\n    unmount = () => {\n        ReactDom.unmountComponentAtNode(document.getElementById('root'));\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.timer);\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>当前求和为：{this.state.count}</h2>\n                <button onClick={this.handleAdd}>点击+1</button>\n                <button onClick={this.unmount}>卸载组件</button>\n            </div>\n        )\n    }\n}\n*/\n\n\nfunction Demo(){\n    const [count, setCount] = React.useState(0);\n\n    function handleAdd(){\n        //setCount(count+1); //setCount写法1: setXxx(newValue)\n        setCount(count => count+1); //setCount写法2: setXxx(value => newValue)\n    }\n\n    function unmount(){\n        ReactDom.unmountComponentAtNode(document.getElementById('root'));\n    }\n\n    React.useEffect(() => {\n        let timer = setInterval(() => {\n            setCount(count => count+1);\n        }, 1000);\n        return () => {\n            clearInterval(timer);\n        }\n    }, [count])\n\n    return (\n        <div>\n            <h2>当前求和为：{count}</h2>\n            <button onClick={handleAdd}>点击+1</button>\n            <button onClick={unmount}>卸载组件</button>\n        </div>\n    )\n}\n\nexport default Demo;"]},"metadata":{},"sourceType":"module"}